name: Build Nuget
 
on:
  push:
    branches: [ master, release, prerelease , dev]
  pull_request:
    branches: [ dev ]
 
jobs:
  build:
    runs-on: windows-latest
    outputs:
        output1: ${{ steps.Build_Package.outputs.version }}
    if: github.ref == 'refs/heads/release'  || github.ref ==  'refs/heads/prerelease' || github.ref ==  'refs/heads/master' || github.ref ==  'refs/heads/dev'
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core 3.1
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.200'
      - name: Setup .NET 5.0
        uses: actions/setup-dotnet@v1
        with:
            dotnet-version: '5.0.100-preview.7.20366.6'
      - name: DOTNET HACK
    #  https://github.com/actions/setup-dotnet/issues/25
        shell: pwsh
        run: |
                $version = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Leaf;
                $root = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Parent;
                $directories = Get-ChildItem $root | Where-Object { $_.Name -ne $version };
                foreach ($dir in $directories) {
                  $from = $dir.FullName;
                  $to = "$root/$version";
                  Write-Host Copying from $from to $to;
                  Copy-Item "$from\*" $to -Recurse -Force;
                }
          
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.1
      - name: Setup Nuget.exe
        uses: warrenbuckley/Setup-Nuget@v1
      - name: Run Natic NugetPackager
        run : |
              msbuild xlw\NugetPackager\NugetPackager.csproj
        id  : Build_Package
      - name: Run .NET NugetPackager
        run : |
              msbuild xlwDotNet\NugetPackager\NugetPackager.csproj
      - uses: actions/upload-artifact@v2
        with:
            name: nuget-artifact
            path: nuget_pack/*.nupkg
  release:
    runs-on: windows-latest
    needs: [build]
    if: github.ref == 'refs/heads/release'  || github.ref ==  'refs/heads/prerelease'
    steps:
      - uses: actions/download-artifact@v2
        with:
            name: nuget-artifact
      - name: Tag commit
        uses: tvdias/github-tagger@v0.0.1
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          tag: "${{ needs.build.outputs.output1   }}"
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "*.nupkg"
          prerelease: ${{ github.ref ==  'refs/heads/prerelease'}}
          draft: false
          tag: "${{  needs.build.outputs.output1  }}"
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Push Nuget to Github
        uses: tanaka-takayoshi/nuget-publish-to-github-packages-action@v2.1
        with:
          nupkg-path:  "*.nupkg"
          repo-owner:  'xlw'
          gh-user:  'xlw'
          token:  ${{ secrets.GITHUB_TOKEN }}       
      - name: Push Nuget to Nuget.org
        run: dotnet nuget push *.nupkg --api-key ${{ secrets.XLWNUGET }} --source https://api.nuget.org/v3/index.json
      
